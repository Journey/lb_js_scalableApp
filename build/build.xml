<?xml version="1.0" encoding="UTF-8"?>
<project name="lb" basedir="." default="build">
  <description>
  Build script for
  The Scalable JavaScript Application Framework
  by Legalbox, Paris

  Author: Eric Bréchemier &lt;contact@legalbox.com>
  Copyright: Legalbox SA (c) 2010-2011, All Rights Reserved
  License: BSD License - http://creativecommons.org/licenses/BSD/
  Version: 2011-07-08

  Based on Build script for bezen.org JavaScript library
  CC-BY: Eric Bréchemier - http://bezen.org/javascript/
  </description>

  <import file="macros.xml" />

  <target name="build"
    depends="doc,check,combine,compress"
  />

  <target name="clean" description="Remove previous temps">
    <delete dir="out"/>
  </target>

  <target name="checkAmd"
    description="Check Asynchronous Module Definition source with JSLint">
    <jslint dir="../src/amd" />
  </target>

  <target name="checkClosure"
          description="Check Google Closure source files with JSLint">
    <!-- food for thought: fails with terrible errors -->
    <jslint dir="../src/closure" />
  </target>

  <target name="checkSrc"
          description="Check JavaScript modules source files with JSLint">
    <!-- check ../src/{project name} if available -->
    <available file="../src/${ant.project.name}"
      property="modules.src" value="../src/${ant.project.name}" />
    <!-- otherwise check ../src -->
    <property name="modules.src" value="../src" />

    <jslint dir="${modules.src}" />
  </target>

  <target name="checkTest" description="Check test files with JSLint">
    <jslint dir="../test" />
  </target>

  <target name="check" description="Check JavaScript files with JSLint" 
          depends="checkSrc, checkTest"
  />

  <target name="document"
    description="Document JavaScript source files with Natural Docs">
    <mkdir dir="out/doc/config"/>
    <naturaldocs in="../src" out="out/doc" config="out/doc/config" />
  </target>

  <target name="doc" depends="document" description="alias for document" />

  <target name="combine"
    description="Combine JavaScript files using requireJS optimization tool">
    <!--
      Absolute locations are needed for the build config;
      otherwise, locations are relative to the config file.

      Paths use '/' as separator even on Windows, otherwise
      '\' results in escape sequences in JavaScript strings
    -->
    <pathconvert property="src.dir" dirsep="/">
      <path location="../src" />
    </pathconvert>

    <pathconvert property="out.dir" dirsep="/">
      <path location="out" />
    </pathconvert>

    <!--
    Note:
    The modules to combine must be listed explicitly for the optimizer tool.
    There is no option to combine all scripts found in the source folder.
    https://groups.google.com/group/requirejs/browse_thread/thread/3dc1d075cb8cd4b4/52407c37e426adee?lnk=gst&q=%22concatenate+all+scripts%22#52407c37e426adee
    -->

    <!-- list all scripts files found in source folder -->
    <fileset id="src.files" dir="${src.dir}">
      <include name="**/*.js" />
    </fileset>

    <!-- convert the list to the "inside" of an array of modules:
         a", "b", "c", "d
    -->
    <pathconvert property="all.modules.inner"
      refid="src.files" dirsep="/" pathsep='","'>
      <!-- convert to a path relative to source folder -->
      <map from="${src.dir}/" to="" />
      <!-- remove the .js extension to refer to the module, not the file -->
      <mapper type="glob" from="*.js" to="*" />
    </pathconvert>

    <!-- add the initial '["' and final '"]' -->
    <property name="all.modules" value='["${all.modules.inner}"]' />

    <!-- combine all modules -->
    <requirejs in="${src.dir}" modules="${all.modules}"
               config="${out.dir}/config"
               out="${out.dir}/js/${ant.project.name}-full.js"  />
  </target>

  <target name="setTimestamp">
    <tstamp>
      <format property="NOW" pattern="yyyy-MM-dd-HHmm" timezone="GMT" />
    </tstamp>
  </target>

  <target name="compress"
   description="Compress JavaScript files with YUI Compressor"
   depends="setTimestamp"
  >
    <yuicompressor in="out/js/${ant.project.name}-full.js"
                   out="out/js/${ant.project.name}-min.js" />

    <copy file="out/js/${ant.project.name}-min.js"
      tofile="out/js/${ant.project.name}-min-${NOW}.js" />
  </target>

</project>
